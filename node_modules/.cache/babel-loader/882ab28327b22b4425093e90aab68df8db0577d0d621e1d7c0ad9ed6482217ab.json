{"ast":null,"code":"const checkAnswer = () => {\n  if (userAnswer === '') return;\n  const userNum = parseInt(userAnswer);\n  if (userNum === answer) {\n    setScore(score + 1);\n    setCorrectAnswers(correctAnswers + 1);\n    setFeedback({\n      type: 'correct',\n      message: 'Correct! ✓'\n    });\n  } else {\n    setIncorrectAnswers(incorrectAnswers + 1);\n    setFeedback({\n      type: 'incorrect',\n      message: `Incorrect. Answer: ${answer}`\n    });\n  }\n  setTimeout(() => {\n    setFeedback(null);\n    generateProblem();\n    setUserAnswer('');\n  }, 1000);\n};\n\n// Remove the unused resetGame function and replace with inline logic\nconst handleTimeUp = () => {\n  setGameActive(false);\n  let performance = '';\n  const accuracy = totalAnswers > 0 ? (correctAnswers / totalAnswers * 100).toFixed(1) : 0;\n  if (score >= 25) performance = 'Outstanding! 🎉';else if (score >= 20) performance = 'Excellent! 🌟';else if (score >= 15) performance = 'Great! 👍';else if (score >= 10) performance = 'Good! 👌';else performance = 'Keep practicing! 💪';\n  setFinalMessage(`Time's up! Score: ${score}/60 (${accuracy}% accuracy) - ${performance}`);\n};","map":{"version":3,"names":["checkAnswer","userAnswer","userNum","parseInt","answer","setScore","score","setCorrectAnswers","correctAnswers","setFeedback","type","message","setIncorrectAnswers","incorrectAnswers","setTimeout","generateProblem","setUserAnswer","handleTimeUp","setGameActive","performance","accuracy","totalAnswers","toFixed","setFinalMessage"],"sources":["/Users/Siddhant/Desktop/Everything/website/personal-website/src/components/MathGame.js"],"sourcesContent":["const checkAnswer = () => {\n  if (userAnswer === '') return;\n  \n  const userNum = parseInt(userAnswer);\n  if (userNum === answer) {\n    setScore(score + 1);\n    setCorrectAnswers(correctAnswers + 1);\n    setFeedback({ type: 'correct', message: 'Correct! ✓' });\n  } else {\n    setIncorrectAnswers(incorrectAnswers + 1);\n    setFeedback({ type: 'incorrect', message: `Incorrect. Answer: ${answer}` });\n  }\n  \n  setTimeout(() => {\n    setFeedback(null);\n    generateProblem();\n    setUserAnswer('');\n  }, 1000);\n};\n\n// Remove the unused resetGame function and replace with inline logic\nconst handleTimeUp = () => {\n  setGameActive(false);\n  \n  let performance = '';\n  const accuracy = totalAnswers > 0 ? (correctAnswers / totalAnswers * 100).toFixed(1) : 0;\n  \n  if (score >= 25) performance = 'Outstanding! 🎉';\n  else if (score >= 20) performance = 'Excellent! 🌟';\n  else if (score >= 15) performance = 'Great! 👍';\n  else if (score >= 10) performance = 'Good! 👌';\n  else performance = 'Keep practicing! 💪';\n  \n  setFinalMessage(`Time's up! Score: ${score}/60 (${accuracy}% accuracy) - ${performance}`);\n}; "],"mappings":"AAAA,MAAMA,WAAW,GAAGA,CAAA,KAAM;EACxB,IAAIC,UAAU,KAAK,EAAE,EAAE;EAEvB,MAAMC,OAAO,GAAGC,QAAQ,CAACF,UAAU,CAAC;EACpC,IAAIC,OAAO,KAAKE,MAAM,EAAE;IACtBC,QAAQ,CAACC,KAAK,GAAG,CAAC,CAAC;IACnBC,iBAAiB,CAACC,cAAc,GAAG,CAAC,CAAC;IACrCC,WAAW,CAAC;MAAEC,IAAI,EAAE,SAAS;MAAEC,OAAO,EAAE;IAAa,CAAC,CAAC;EACzD,CAAC,MAAM;IACLC,mBAAmB,CAACC,gBAAgB,GAAG,CAAC,CAAC;IACzCJ,WAAW,CAAC;MAAEC,IAAI,EAAE,WAAW;MAAEC,OAAO,EAAE,sBAAsBP,MAAM;IAAG,CAAC,CAAC;EAC7E;EAEAU,UAAU,CAAC,MAAM;IACfL,WAAW,CAAC,IAAI,CAAC;IACjBM,eAAe,CAAC,CAAC;IACjBC,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC,EAAE,IAAI,CAAC;AACV,CAAC;;AAED;AACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACzBC,aAAa,CAAC,KAAK,CAAC;EAEpB,IAAIC,WAAW,GAAG,EAAE;EACpB,MAAMC,QAAQ,GAAGC,YAAY,GAAG,CAAC,GAAG,CAACb,cAAc,GAAGa,YAAY,GAAG,GAAG,EAAEC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;EAExF,IAAIhB,KAAK,IAAI,EAAE,EAAEa,WAAW,GAAG,iBAAiB,CAAC,KAC5C,IAAIb,KAAK,IAAI,EAAE,EAAEa,WAAW,GAAG,eAAe,CAAC,KAC/C,IAAIb,KAAK,IAAI,EAAE,EAAEa,WAAW,GAAG,WAAW,CAAC,KAC3C,IAAIb,KAAK,IAAI,EAAE,EAAEa,WAAW,GAAG,UAAU,CAAC,KAC1CA,WAAW,GAAG,qBAAqB;EAExCI,eAAe,CAAC,qBAAqBjB,KAAK,QAAQc,QAAQ,iBAAiBD,WAAW,EAAE,CAAC;AAC3F,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}