{"ast":null,"code":"var _jsxFileName = \"/Users/Siddhant/Desktop/Everything/website/personal-website/src/contexts/ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const useTheme = () => {\n  _s();\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n_s(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s2();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  useEffect(() => {\n    // Check for saved theme preference or default to light mode\n    const savedTheme = localStorage.getItem('theme');\n    if (savedTheme) {\n      setIsDarkMode(savedTheme === 'dark');\n    }\n  }, []);\n  useEffect(() => {\n    // Save theme preference and apply to document\n    localStorage.setItem('theme', isDarkMode ? 'dark' : 'light');\n    document.documentElement.setAttribute('data-theme', isDarkMode ? 'dark' : 'light');\n  }, [isDarkMode]);\n  const toggleTheme = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n  const theme = {\n    isDarkMode,\n    toggleTheme,\n    colors: isDarkMode ? {\n      // Dark theme (current black theme)\n      background: '#000000',\n      surface: 'rgba(255, 255, 255, 0.02)',\n      surfaceHover: 'rgba(255, 255, 255, 0.05)',\n      border: '#333333',\n      borderHover: '#666666',\n      text: '#ffffff',\n      textSecondary: '#cccccc',\n      textMuted: '#888888',\n      accent: '#667eea'\n    } : {\n      // Light theme (cornflower blue)\n      background: '#6495ED',\n      surface: 'rgba(255, 255, 255, 0.1)',\n      surfaceHover: 'rgba(255, 255, 255, 0.2)',\n      border: 'rgba(255, 255, 255, 0.3)',\n      borderHover: 'rgba(255, 255, 255, 0.5)',\n      text: '#ffffff',\n      textSecondary: 'rgba(255, 255, 255, 0.9)',\n      textMuted: 'rgba(255, 255, 255, 0.7)',\n      accent: '#ffffff'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: theme,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s2(ThemeProvider, \"jZSDCHM8qUYa7sOOCe+CR2toAGQ=\");\n_c = ThemeProvider;\nexport default ThemeContext;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","useTheme","_s","context","Error","ThemeProvider","children","_s2","isDarkMode","setIsDarkMode","savedTheme","localStorage","getItem","setItem","document","documentElement","setAttribute","toggleTheme","theme","colors","background","surface","surfaceHover","border","borderHover","text","textSecondary","textMuted","accent","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Siddhant/Desktop/Everything/website/personal-website/src/contexts/ThemeContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst ThemeContext = createContext();\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n\nexport const ThemeProvider = ({ children }) => {\n  const [isDarkMode, setIsDarkMode] = useState(false);\n\n  useEffect(() => {\n    // Check for saved theme preference or default to light mode\n    const savedTheme = localStorage.getItem('theme');\n    if (savedTheme) {\n      setIsDarkMode(savedTheme === 'dark');\n    }\n  }, []);\n\n  useEffect(() => {\n    // Save theme preference and apply to document\n    localStorage.setItem('theme', isDarkMode ? 'dark' : 'light');\n    document.documentElement.setAttribute('data-theme', isDarkMode ? 'dark' : 'light');\n  }, [isDarkMode]);\n\n  const toggleTheme = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n\n  const theme = {\n    isDarkMode,\n    toggleTheme,\n    colors: isDarkMode ? {\n      // Dark theme (current black theme)\n      background: '#000000',\n      surface: 'rgba(255, 255, 255, 0.02)',\n      surfaceHover: 'rgba(255, 255, 255, 0.05)',\n      border: '#333333',\n      borderHover: '#666666',\n      text: '#ffffff',\n      textSecondary: '#cccccc',\n      textMuted: '#888888',\n      accent: '#667eea'\n    } : {\n      // Light theme (cornflower blue)\n      background: '#6495ED',\n      surface: 'rgba(255, 255, 255, 0.1)',\n      surfaceHover: 'rgba(255, 255, 255, 0.2)',\n      border: 'rgba(255, 255, 255, 0.3)',\n      borderHover: 'rgba(255, 255, 255, 0.5)',\n      text: '#ffffff',\n      textSecondary: 'rgba(255, 255, 255, 0.9)',\n      textMuted: 'rgba(255, 255, 255, 0.7)',\n      accent: '#ffffff'\n    }\n  };\n\n  return (\n    <ThemeContext.Provider value={theme}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport default ThemeContext; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMO,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,OAAO,GAAGR,UAAU,CAACK,YAAY,CAAC;EACxC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;EACjE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,QAAQ;AAQrB,OAAO,MAAMI,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC7C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMa,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,IAAIF,UAAU,EAAE;MACdD,aAAa,CAACC,UAAU,KAAK,MAAM,CAAC;IACtC;EACF,CAAC,EAAE,EAAE,CAAC;EAENb,SAAS,CAAC,MAAM;IACd;IACAc,YAAY,CAACE,OAAO,CAAC,OAAO,EAAEL,UAAU,GAAG,MAAM,GAAG,OAAO,CAAC;IAC5DM,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,EAAER,UAAU,GAAG,MAAM,GAAG,OAAO,CAAC;EACpF,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxBR,aAAa,CAAC,CAACD,UAAU,CAAC;EAC5B,CAAC;EAED,MAAMU,KAAK,GAAG;IACZV,UAAU;IACVS,WAAW;IACXE,MAAM,EAAEX,UAAU,GAAG;MACnB;MACAY,UAAU,EAAE,SAAS;MACrBC,OAAO,EAAE,2BAA2B;MACpCC,YAAY,EAAE,2BAA2B;MACzCC,MAAM,EAAE,SAAS;MACjBC,WAAW,EAAE,SAAS;MACtBC,IAAI,EAAE,SAAS;MACfC,aAAa,EAAE,SAAS;MACxBC,SAAS,EAAE,SAAS;MACpBC,MAAM,EAAE;IACV,CAAC,GAAG;MACF;MACAR,UAAU,EAAE,SAAS;MACrBC,OAAO,EAAE,0BAA0B;MACnCC,YAAY,EAAE,0BAA0B;MACxCC,MAAM,EAAE,0BAA0B;MAClCC,WAAW,EAAE,0BAA0B;MACvCC,IAAI,EAAE,SAAS;MACfC,aAAa,EAAE,0BAA0B;MACzCC,SAAS,EAAE,0BAA0B;MACrCC,MAAM,EAAE;IACV;EACF,CAAC;EAED,oBACE7B,OAAA,CAACC,YAAY,CAAC6B,QAAQ;IAACC,KAAK,EAAEZ,KAAM;IAAAZ,QAAA,EACjCA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAAC3B,GAAA,CAtDWF,aAAa;AAAA8B,EAAA,GAAb9B,aAAa;AAwD1B,eAAeL,YAAY;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}